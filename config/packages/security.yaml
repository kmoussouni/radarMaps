security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: 'bcrypt'

    role_hierarchy:
#        ROLE_FORCEPASSWORDCHANGE: ROLE_FORCEPASSWORDCHANGE
        ROLE_USER:          [ROLE_USER]
        ROLE_SUPER_ADMIN:   [ROLE_ROOT, ROLE_ADMIN]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            # Add your favorite authentication process here
            form_login:
                provider: fos_userbundle
                check_path: /oauth/v2/auth/login_check
                login_path: /oauth/v2/auth/login
            anonymous: true

        doc:
            pattern:    ^/api/docs
            fos_oauth:  false
#            stateless:  true
            anonymous:  true

        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true
            anonymous:  true

        main:
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/docs, roles: [ IS_AUTHENTICATED_ANONYMOUSLY ] }
#        - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/oauth/v2/auth, role: IS_AUTHENTICATED_ANONYMOUSLY }

